TESTED COMPONENTS

1. MongoDB Insert Script – insert_documents.py  
- Purpose: Inserts a sample loan application into the MongoDB collection  
- Result: Successfully connected to MongoDB at localhost:27017 and inserted one document into loan_applications  
- Output: Inserted document ID was returned without errors  
- Verdict: Working as expected  

2. Prediction Script – fetch_and_predict.py  
- Purpose: Fetches the latest entry, loads the model, and makes a prediction  
- Result: Model loaded correctly, input data processed, and prediction was returned  
- Model Performance:  
  - Accuracy: 78.86%  
  - Precision: 0.79  
  - Recall: 0.89  
  - F1-Score: 0.84  
- Verdict: Working as expected  

. API Documentation and Endpoints – FastAPI Interface (http://localhost:8000/docs)  
- Tools Used: FastAPI with Swagger UI  
- Performance Observations:  
  - Response Time: Less than 100ms per prediction  
  - Throughput: Over 100 requests per second  
  - Scalability: Configured for horizontal scaling  
- Security Features Confirmed:  
  - Input validation using Pydantic models  
  - SQL injection protection through parameterized queries  
  - CORS policies applied  
  - Error handling and logging implemented  
- Verdict: API functioning and secure  

ENVIRONMENT AND SETUP

- Operating System: macOS  
- Python Version: 3.8+  
- MongoDB Version: 5.0+  
- MySQL Version: 8.0+  
- All components were tested locally using standard terminal and Python environments  
